Jean Patrick aprendeu a programar aos doze anos em Basic e DBase II Plus usando um computador MSX. Três anos mais tarde, em 1990, fez um curso de Clipper Summer 87 patrocinado pelo Instituto de Desenvolvimento Econômico e Social do Pará (antigo IDESP). Em 1992, devido a um acidente em um rio, passou a depender de uma cadeira de rodas, mas isso não o impediu de continuar como programador. Por muito tempo, programou por hobby e para pequena empresa de eletrônica de sua família.
Em 2000, passou a usar sua primeira distribuição Linux (Conectiva 5) em dual boot com o Windows.
No segundo semestre de 2006, começou a estudar programação em Delphi e Kylix (descontinuada versão do Delphi para Linux), com o intuito de desenvolver sistemas comerciais. Como não tinha condições de comprar uma licença comercial do Delphi e ser totalmente contra o uso de cópias piratas, começou como desenvolvedor autônomo usando a recém lançada versão gratuita do Delphi, o Turbo Delphi Explorer 2006, e o servidor de banco de dados Firebird, também, gratuito. Um ano depois, conheceu o Lazarus e o Free Pascal, e passou a acompanhar o desenvolvimento destes e a fazer testes.
Também, devido à procura crescente por sistemas web, estudou HTML, CSS, JavaScript, AJAX, jQuery, Java e PHP.
Possui conhecimento avançado sobre desenvolvimento de programas em ambiente CGI, FastCGI e ambiente Desktop usando a linguagem Free Pascal e, como segunda linguagem de programação, desenvolve sites e sistemas web com PHP. Possui ainda conhecimentos sobre bancos de dados, incluindo PostgreSQL, MySQL, SQLite e Firebird.
É mantenedor do site www.jpsoft.com.br onde divulga seus trabalhos. Também, presta serviços à divisão de informática da prefeitura de sua cidade, desenvolvendo sistemas Desktop e Web no S.O. Linux usando Free Pascal/Lazarus ou PHP com um servidor de banco de dados PostgreSQL.

No contexto web, a sigla CGI é um acrônimo para a expressão inglesa Common Gateway Interface. Não se trata de uma linguagem de programação, mas de uma importante especificação tecnológica que permite a criação de páginas web com conteúdo dinâmico. Portanto, a tecnologia CGI, permite o envio de informações de um navegador de internet, em um computador cliente, para um programa hospedado em um servidor web. Este programa analisa as informações recebidas e devolve uma resposta para o computador cliente, e esta resposta pode conter dados extraídos de um banco de dados.
Estes programas podem ser escritos em qualquer linguagem de programação e são denominados scripts CGI. 
Mas, quem usa CGI? Todas as principais linguagens de programação para web, de uma forma ou de outra, fazem uso desta especificação. Como é o caso do PHP, Java, Ruby, Perl, Python, ASP.NET, etc.
A principal desvantagem desta tecnologia é que, a cada requisição de um aplicativo CGI, um novo processo é iniciado na máquina servidora o que poderia demandar um tempo de resposta ruim se milhares de usuários efetuarem requisições simultâneas.
Este problema começa a ser resolvido quando passamos a usar o Free Pascal para escrever nossos scripts CGI. Por que? Acontece que uma das principais vantagens de uma aplicação web em Free Pascal, é que esta, por ser compilada é, em muitos casos, mais rápida do que scripts interpretados (como é o caso dos escritos em Python, Perl e PHP). 
Também, a execução de uma aplicação CGI é muito mais rápida e leve em Servidores Linux do que em Servidores Windows. Além disso, fazendo uso do aplicativo servidor de Internet Apache,  haverá um alto desempenho para este tipo de aplicações, seja em Linux ou em Windows.
Portanto, no quadro apresentado acima, um aplicativo CGI já seria capaz de responder milhares de requisições simultaneamente com um desempenho muito bom. No entanto, se você acha que sua aplicação precisa ter um desempenho extraordinariamente mais alto do que é possível com CGI (PHP, ASP.NET, Java ou outra linguagem), poderá fazer uso da tecnologia FastCGI, disponível para o Apache através de um módulo adicional.
Uma aplicação FastCGI, assim como o CGI, pode ser escrita em Free Pascal ou qualquer linguagem que dê suporte a esta tecnologia. Porém, a sua metodologia de processamento difere do CGI padrão. Pois, é capaz de criar um único processo para um aplicativo FastCGI que responderá a múltiplas requisições.
Agora, saindo do campo da performance e entrando na questão da segurança das aplicações, lembremos que os scripts web escritos em Free Pascal, por serem compilados, não deixam o código fonte do projeto exposto no servidor web. Isso é extremamente importante em uma Intranet, pois evita que seu código seja bisbilhotado, modificado por terceiros ou mesmo copiado. E na internet vai dificultar a ação de crackers.
Portanto, usando os recursos disponíveis no moderno compilador Free Pascal, mais a IDE Lazarus para desenvolvimento RAD, associado ainda à tecnologia FastCGI e a um servidor Apache executando em um sistema operacional Linux, podemos criar facilmente aplicativos web, rápidos, seguros, tão bons quanto ou até melhores que os criados em linguagens como PHP, Python e Java.